# RUN: llc -O0 -run-pass=legalize-mir -global-isel %s -o - 2>&1 | FileCheck %s

--- |
  target datalayout = "e-m:o-i64:64-i128:128-n32:64-S128"
  target triple = "aarch64-apple-ios"
  define void @test_scalar_add_big() {
  entry:
    ret void
  }
  define void @test_scalar_add_small() {
  entry:
    ret void
  }
  define void @test_vector_add() {
  entry:
    ret void
  }
...

---
name:            test_scalar_add_big
isSSA:           true
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
body: |
  bb.0.entry:
    liveins: %x0, %x1, %x2, %x3
    ; CHECK-LABEL: name: test_scalar_add_big
    ; CHECK-DAG: [[LHS_LO:%.*]](64), [[LHS_HI:%.*]](64) = G_EXTRACT s64 %0, 0, 64
    ; CHECK-DAG: [[RHS_LO:%.*]](64), [[RHS_HI:%.*]](64) = G_EXTRACT s64 %1, 0, 64
    ; CHECK-DAG: [[CARRY0:%.*]](1) = G_CONSTANT s1 0
    ; CHECK: [[RES_LO:%.*]](64), [[CARRY:%.*]](1) = G_ADDE s64 [[LHS_LO]], [[RHS_LO]], [[CARRY0]]
    ; CHECK: [[RES_HI:%.*]](64), {{%.*}}(1) = G_ADDE s64 [[LHS_HI]], [[RHS_HI]], [[CARRY]]
    ; CHECK: %2(128) = G_SEQUENCE s128 [[RES_LO]], [[RES_HI]]

    %0(128) = G_SEQUENCE s128 %x0, %x1
    %1(128) = G_SEQUENCE s128 %x2, %x3
    %2(128) = G_ADD s128 %0, %1
    %x0, %x1 = G_EXTRACT s64 %2, 0, 64
...

---
name:            test_scalar_add_small
isSSA:           true
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
body: |
  bb.0.entry:
    liveins: %x0, %x1, %x2, %x3
    ; CHECK-LABEL: name: test_scalar_add_small
    ; CHECK-DAG: [[LHS:%.*]](32) = G_ANYEXTEND s32 %0
    ; CHECK-DAG: [[RHS:%.*]](32) = G_ANYEXTEND s32 %1
    ; CHECK: [[RES:%.*]](32) = G_ADD s32 [[LHS]], [[RHS]]
    ; CHECK: %2(8) = G_TRUNC s8 [[RES]]

    %0(8) = G_TRUNC s8 %x0
    %1(8) = G_TRUNC s8 %x1
    %2(8) = G_ADD s8 %0, %1
    %x0 = G_ANYEXTEND s64 %2
...

---
name:            test_vector_add
isSSA:           true
registers:
  - { id: 0, class: _ }
  - { id: 1, class: _ }
  - { id: 2, class: _ }
body: |
  bb.0.entry:
    liveins: %q0, %q1, %q2, %q3
    ; CHECK-LABEL: name: test_vector_add
    ; CHECK-DAG: [[LHS_LO:%.*]](128), [[LHS_HI:%.*]](128) = G_EXTRACT <2 x s64> %0, 0, 128
    ; CHECK-DAG: [[RHS_LO:%.*]](128), [[RHS_HI:%.*]](128) = G_EXTRACT <2 x s64> %1, 0, 128
    ; CHECK: [[RES_LO:%.*]](128) = G_ADD <2 x s64> [[LHS_LO]], [[RHS_LO]]
    ; CHECK: [[RES_HI:%.*]](128) = G_ADD <2 x s64> [[LHS_HI]], [[RHS_HI]]
    ; CHECK: %2(256) = G_SEQUENCE <4 x s64> [[RES_LO]], [[RES_HI]]

    %0(256) = G_SEQUENCE <4 x s64> %q0, %q1
    %1(256) = G_SEQUENCE <4 x s64> %q2, %q3
    %2(256) = G_ADD <4 x s64> %0, %1
    %q0, %q1 = G_EXTRACT <2 x s64> %2, 0, 128
...
